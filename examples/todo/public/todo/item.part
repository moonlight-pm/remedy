import { model, saveModel } from "~/lib/model";

interface Attributes {
    id: number;
    toggle?: boolean;
    text?: string;
    edit?: boolean;
    destroy?: boolean;
}

const item = model.items.find((it) => it.id === id);

if (!item) {
    $context.status(404);
    return;
}

if (toggle) {
    item.done = !item.done;
    await saveModel();
    $context.oob('todo-footer');
    $context.oob('todo-toggle');
    $context.oob('todo-list');
    $context.cancelRender();
}

if (text) {
    item.text = text;
    await saveModel();
}

if (destroy) {
    model.items = model.items.filter((it) => it.id !== id);
    await saveModel();
    $context.cancelRender();
    $context.oob('todo-footer');
}

<li hx-trigger="dblclick" hx-get="/todo/item?id={id}&edit=true" hx-swap="outerHTML" hx-on::after-request="
        // This event isn't firing
        console.log('AFTER')
        this.querySelector('input.edit')?.focus();
        this.querySelector('input.edit')?.setSelectionRange(999,999);
    " class="{edit ? 'editing' : ''} {item.done ? 'completed' : ''}">
    <div class="view">
        <input hx-get="/todo/item?id={id}&toggle=true" hx-swap="none" class="toggle" type="checkbox" autocomplete="off"
            checked={item.done}>
        <label>{item.text}</label>
        <button hx-get="/todo/item?id={id}&destroy=true" hx-target="closest li" hx-swap="delete"
            class="destroy" />
    </div>
    <input style={edit ? '' : 'display: none;'} hx-get="/todo/item?id={id}" hx-target="closest li" hx-swap="outerHTML"
        hx-on:blur="this.parentElement.classList.remove('editing'); this.remove();" class="edit" name="text"
        value={item.text}>
</li>
